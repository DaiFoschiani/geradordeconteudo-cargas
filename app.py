# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18RFJLsjoy8VQPT5C6Yg8AQzFGvKLCVfw
"""

import streamlit as st
from langchain_groq import ChatGroq
from langchain_core.prompts import ChatPromptTemplate
from langchain_core.output_parsers import StrOutputParser
from dotenv import load_dotenv
import os

load_dotenv()

## conex√£o com a LLM
id_model = "llama3-70b-8192"
llm = ChatGroq(
    model=id_model,
    temperature=0.7,
    max_tokens=None,
    timeout=None,
    max_retries=2,
)

## fun√ß√£o de gera√ß√£o
def llm_generate(llm, prompt):
    template = ChatPromptTemplate.from_messages([
        ("system", "Voc√™ √© um especialista em transportes da ANTT com foco em SEO e escrita persuasiva."),
        ("human", "{prompt}"),
    ])
    chain = template | llm | StrOutputParser()
    res = chain.invoke({"prompt": prompt})
    return res

st.set_page_config(page_title="Gerador de conte√∫do- Transportes de cargas ü§ñ", page_icon="ü§ñ")
st.title("Gerador de conte√∫do- Transporte de cargas")

# Campos do formul√°rio
topic = st.text_input("Tema:", placeholder="Ex: Seguran√ßa rodovi√°ria para caminhoneiros, Novas regulamenta√ß√µes para ve√≠culos de carga, etc.")
platform = st.selectbox("Plataforma:", ['Instagram', 'Facebook', 'TikTok', 'LinkedIn', 'Whatsapp', 'E-mail'])
tone = st.selectbox("Tom:", ['Normal', 'Informativo', 'Inspirador', 'Urgente', 'Informal'])
length = st.selectbox("Tamanho:", ['Curto', 'M√©dio', 'Longo'])
audience = st.selectbox("P√∫blico-alvo:", ['Caminhoneiros (Geral)', 'Motoristas aut√¥nomos', 'Empresas de Frota', 'Profissionais de Log√≠stica', 'Rec√©m-Habilitados (D/E)'])
cta = st.checkbox("Incluir CTA (Chamada para a√ß√£o)")
hashtags = st.checkbox("Retornar Hashtags")
keywords = st.text_area("Palavras-chave (SEO):", placeholder="Ex: RNTRC, Sa√∫de do motorista, Tempo de descanso, Multas...")

if st.button("Gerar conte√∫do"):
    prompt = f"""
    Escreva um texto com SEO otimizado sobre o tema '{topic}'.
    Retorne em sua resposta apenas o texto final e n√£o inclua ela dentro de aspas.
    - Onde ser√° publicado: {platform}.
    - Tom: {tone}.
    - P√∫blico-alvo: {audience}.
    - Comprimento: {length}.
    - {"Inclua uma chamada para a√ß√£o clara." if cta else "N√£o inclua chamada para a√ß√£o"}
    - {"Retorne ao final do texto hashtags relevantes." if hashtags else "N√£o inclua hashtags."}
    {"- Palavras-chave que devem estar presentes nesse texto (para SEO): " + keywords if keywords else ""}
    """
    try:
        res = llm_generate(llm, prompt)
        st.markdown(res)
    except Exception as e:
        st.error(f"Erro: {e}")